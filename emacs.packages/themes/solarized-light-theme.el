(deftheme solarized-light
  "Created 2014-09-08.")

(custom-theme-set-variables
 'solarized-light
 '(ac-auto-show-menu t)
 '(ac-auto-start t)
 '(ac-candidate-limit 15)
 '(ac-expand-on-auto-complete t)
 '(powerline-color0 "#60B3A5")
 '(powerline-color1 "#CDC8AB")
 '(powerline-color2 "#E6E1C4")
 '(ack-and-a-half-arguments (quote ("--color-match=green" "--color-file=yellow" "-w")))
 '(ack-and-a-half-executable "/usr/local/bin/ack")
 '(ansi-color-faces-vector [default bold shadow italic underline bold bold-italic bold])
 '(ansi-color-names-vector ["#eee8d5" "#dc322f" "#859900" "#b58900" "#268bd2" "#d33682" "#2aa198" "#839496"])
 '(backup-by-copying-when-mismatch nil)
 '(calendar-mark-diary-entries-flag t)
 '(calendar-setup (quote one-frame))
 '(calendar-view-diary-initially-flag t)
 '(completion-ignored-extensions (quote (".o" "~" ".bin" ".lbin" ".so" ".a" ".ln" ".blg" ".bbl" ".elc" ".lof" ".glo" ".idx" ".lot" ".svn/" ".hg/" ".git/" ".bzr/" "CVS/" "_darcs/" "_MTN/" ".fmt" ".tfm" ".class" ".fas" ".lib" ".mem" ".x86f" ".sparcf" ".dfsl" ".pfsl" ".d64fsl" ".p64fsl" ".lx64fsl" ".lx32fsl" ".dx64fsl" ".dx32fsl" ".fx64fsl" ".fx32fsl" ".sx64fsl" ".sx32fsl" ".wx64fsl" ".wx32fsl" ".fasl" ".ufsl" ".fsl" ".dxl" ".lo" ".la" ".gmo" ".mo" ".toc" ".aux" ".cp" ".fn" ".ky" ".pg" ".tp" ".vr" ".cps" ".fns" ".kys" ".pgs" ".tps" ".vrs" ".pyc" ".pyo" ".svn-base")))
 '(dabbrev-check-all-buffers nil)
 '(dabbrev-eliminate-newlines nil)
 '(emms-cache-file "~/.emacs.d/emms/cache")
 '(emms-mode-line-format " %s ")
 '(fci-rule-color "#eee8d5")
 '(file-cache-find-command "find -L")
 '(flycheck-highlighting-mode (quote lines))
 '(flycheck-jshintrc "/Users/charld13/.jshintrc")
 '(git-gutter-fr:side (quote left-fringe))
 '(ibuffer-default-sorting-mode (quote major-mode))
 '(ibuffer-filter-group-name-face (quote font-lock-builtin-face))
 '(ibuffer-fontification-alist (quote ((10 buffer-read-only font-lock-constant-face) (15 (and buffer-file-name (string-match ibuffer-compressed-file-name-regexp buffer-file-name)) font-lock-doc-face) (20 (string-match "^*" (buffer-name)) font-lock-keyword-face) (25 (and (string-match "^ " (buffer-name)) (null buffer-file-name)) italic) (30 (memq major-mode ibuffer-help-buffer-modes) font-lock-comment-face) (35 (eq major-mode (quote dired-mode)) font-lock-function-name-face))))
 '(ibuffer-formats (quote ((mark modified read-only " " (name 30 30 :left :elide) " " (mode 16 16 :left :elide) " " filename-and-process) (mark " " (name 16 -1) " " filename))))
 '(ibuffer-git-column-length 24)
 '(ibuffer-show-empty-filter-groups nil)
 '(ido-buffer-disable-smart-matches nil)
 '(ido-enable-dot-prefix t)
 '(ido-file-extensions-order (quote (".json" ".css" ".pl" ".sh" ".as" ".php" ".emacs" ".ini" ".js" ".el" ".ini" ".cfg" ".cnf" "")))
 '(ido-separator nil)
 '(ido-use-filename-at-point (quote guess))
 '(js-indent-level 2)
 '(js2-enter-indents-newline t)
 '(js2-global-externs (quote ("log" "require" "spyOn" "jasmine" "expect" "beforeEach" "afterEach" "clearTimeout" "sinon" "describe" "it" "define" "setInterval" "setTimeout" "bbc")))
 '(make-backup-files nil)
 '(malabar-groovy-java-options (quote ("\"-Xms256m -Xmx512m -Djavax.net.ssl.keyStore=/Users/charld13/.subversion/dev.bbc.co.uk.p12 -Djavax.net.ssl.keyStorePassword=336MartIn!69 -Djavax.net.ssl.keyStoreType=PKCS12 -Djavax.net.ssl.trustStore=/Users/charld13/.m2/jssecacerts\"")))
 '(org-agenda-files (quote ("/Users/charld13/Documents/Calendar.org")))
 '(org-calendar-insert-diary-entry-key (quote i))
 '(popwin:popup-window-height 20)
 '(popwin:special-display-config (quote (("*grunt" :regexp nil :position bottom :noselect t) ("*Malabar Compilation*" :position right :noselect t :width 60) ("*MINIMAP*" :regexp t :position right :noselect t :dedicated t) ("*RE-Builder*" :height 2 :position bottom) ("*run-current-file output*" :regexp nil :position bottom :noselect t :dedicated t :tail t) ("*Ido Completions*" :position bottom :noselect t) ("*Help*") ("Browsing by" :position left :regexp t) ("*Completions*" :position bottom :noselect t) ("*vc-log*" :position bottom) ("*compilation*" :noselect t) ("*Occur*" :position bottom))))
 '(rainbow-delimiters-highlight-braces-p t)
 '(rainbow-delimiters-highlight-brackets-p t)
 '(scroll-bar-mode nil)
 '(shell-pop-autocd-to-working-dir nil)
 '(shell-pop-shell-type (quote ("ansi-term" "*ansi-term*" (lambda nil (ansi-term shell-pop-term-shell)))))
 '(shell-pop-universal-key "C-t")
 '(shell-pop-window-height 40)
 '(shell-pop-window-position "bottom")
 '(tab-stop-list (quote (2 4 6 8 10 12 14 16 18 20 22 24 26 28 30)))
 '(tags-revert-without-query t)
 '(vc-directory-exclusion-list (quote ("SCCS" "RCS" "CVS" "MCVS" ".svn" ".git" ".hg" ".bzr" "_MTN" "_darcs" "{arch}" "node_modules" "tvpjslib" "biscuit" ".tags")))
 '(vc-ignore-dir-regexp "\\`\\(?:[\\/][\\/][^\\/]+[\\/]\\|/\\(?:net\\|biscuit\\|tvpjslib\\|node_modules\\|tags\\|filecache\\|afs\\|\\.\\.\\.\\)/\\)\\'|biscuit|tvpjslib|node_modules|.tags")
 '(yas-fallback-behavior (quote call-other-command))
 '(ibuffer-never-show-predicates (quote ("^\\*")))
 '(highlight-current-line-globally t)
 '(global-rainbow-delimiters-mode t)
 '(custom-safe-themes (quote ("d677ef584c6dfc0697901a44b885cc18e206f05114c8a3b7fde674fce6180879" "022a515bd470f04d54018e9d34ca383193f6b20487610e83bd34e3bf060dafb3" "51542917f2503fcd17cc57278acf6135c87f9487ae4e7d763688d773fa8b341e" "82d2cac368ccdec2fcc7573f24c3f79654b78bf133096f9b40c20d97ec1d8016" "60f04e478dedc16397353fb9f33f0d895ea3dab4f581307fbf0aa2f07e658a40" "c4e6fe8f5728a5d5fd0e92538f68c3b4e8b218bcfb5e07d8afff8731cc5f3df0" "454dc6f3a1e9e062f34c0f988bcef5d898146edc5df4aa666bf5c30bed2ada2e" "628278136f88aa1a151bb2d6c8a86bf2b7631fbea5f0f76cba2a0079cd910f7d" default)))
 '(compilation-message-face (quote (quote default)))
 '(term-default-fg-color "#657b83")
 '(term-default-bg-color "#fdf6e3"))

(custom-theme-set-faces
 'solarized-light
 '(ac-candidate-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#2aa198"))))
 '(ac-candidate-mouse-face ((((class color) (min-colors 89)) (:background "#00736F" :foreground "#69CABF"))))
 '(ac-dabbrev-menu-face ((t (:background "#81a2be" :foreground "grey20"))))
 '(ac-dabbrev-selection-face ((t (:background "#6699cc" :foreground "grey20"))))
 '(ac-etags-candidate-face ((t (:background "#99cc99" :foreground "grey20"))))
 '(ac-etags-selection-face ((t (:background "#698b22" :foreground "grey20"))))
 '(ac-selection-face ((((class color) (min-colors 89)) (:background "#69CABF" :foreground "#00736F"))))
 '(anzu-mode-line ((((class color) (min-colors 89)) (:foreground "#1F1611" :weight bold))))
 '(emms-browser-album-face ((t (:foreground "#f0c674" :weight extra-light :height 1.1 :family "DejaVu Sans Mono"))))
 '(emms-browser-artist-face ((t (:foreground "#cc6666" :height 1.3 :family "DejaVu Sans Mono Extralight"))))
 '(emms-browser-track-face ((t (:foreground "#698b22" :height 1.0 :family "DejaVu Sans Mono"))))
 '(emms-playlist-track-face ((t (:foreground "#698b22"))))
 '(emms-playlist-selected-face ((t (:foreground "#dc322f"))))
 '(etags-select-highlight-tag-face ((t (:background "cadetblue4" :foreground "#2d2d2d" :weight bold))))
 '(flycheck-fringe-error ((((class color) (min-colors 89)) (:foreground "#990A1B" :background "#FF6E64" :weight bold))))
 '(flycheck-fringe-info ((((class color) (min-colors 89)) (:foreground "#00629D" :background "#69B7F0" :weight bold))))
 '(flymake-errline ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#dc322f") :inherit unspecified :foreground unspecified :background unspecified)) (((class color) (min-colors 89)) (:foreground "#990A1B" :background "#FF6E64" :weight bold :underline t))))
 '(font-lock-string-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(function-link ((t (:underline t :slant italic))))
 '(function-mouse-link ((t (:inherit function-link :foreground "#6699cc"))))
 '(git-gutter-fr:modified ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(highlight-current-line-face ((t (:background "#F5F0D3"))))
 '(hs-face ((t nil)))
 '(ido-first-match ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal))))
 '(ido-only-match ((((class color) (min-colors 89)) (:foreground "#698b22" :weight normal))))
 '(ido-subdir ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(inherit ((t (:inherit nil))))
 '(isearch ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#d33682" :weight normal :inverse-video nil))))
 '(js2-error ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(js2-non-used ((t (:inherit nil :foreground "#9c9c9c" :slant italic))))
 '(js2-non-used-var ((t (:inherit nil :foreground "#9c9c9c" :slant italic :underline "#cc3333"))))
 '(js2-warning ((((class color) (min-colors 89)) (:underline "#cb4b16"))))
 '(lazy-highlight ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#b58900" :weight normal))))
 '(link ((((class color) (min-colors 89)) (:foreground "#b58900" :underline t :weight bold))))
 '(magit-section-title ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(minimap-active-region-background ((t (:background "gray24"))))
 '(mode-line ((t (:background "#2aa198" :foreground "#1F1611" :box nil))))
 '(mode-line-inactive ((t (:background "#959073" :foreground "#1F1611" :box nil))))
 '(mouse-over ((t (:background "gray30"))))
 '(popup-scroll-bar-background-face ((((class color) (min-colors 89)) (:background "#93a1a1"))))
 '(popup-scroll-bar-foreground-face ((((class color) (min-colors 89)) (:background "#586e75"))))
 '(popup-tip-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(rainbow-delimiters-depth-1-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(rainbow-delimiters-depth-2-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-delimiters-depth-3-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-delimiters-depth-4-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(rainbow-delimiters-depth-5-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-delimiters-depth-6-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-delimiters-depth-7-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-delimiters-depth-8-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 89)) (:foreground "#657b83" :background "#fdf6e3" :inverse-video t))))
 '(show-paren-match ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified :weight bold))))
 '(button ((t (:underline t))))
 '(shadow ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(match ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :weight bold))))
 '(cursor ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#657b83" :inverse-video t))))
 '(mouse ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#657b83" :inverse-video t))))
 '(escape-glyph ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(fringe ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3"))))
 '(highlight ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(link-visited ((((class color) (min-colors 89)) (:foreground "#b58900" :underline t :weight normal))))
 '(success ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(warning ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(error ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(compilation-column-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :underline nil))))
 '(compilation-column-number ((((class color) (min-colors 89)) (:inherit font-lock-doc-face :foreground "#2aa198" :underline nil))))
 '(compilation-enter-directory-face ((((class color) (min-colors 89)) (:foreground "#859900" :underline nil))))
 '(compilation-error ((((class color) (min-colors 89)) (:inherit error :underline nil))))
 '(compilation-error-face ((((class color) (min-colors 89)) (:foreground "#dc322f" : :underline nil))))
 '(compilation-face ((((class color) (min-colors 89)) (:foreground "#657b83" :underline nil))))
 '(compilation-info ((((class color) (min-colors 89)) (:foreground "#93a1a1" :underline nil :bold nil))))
 '(compilation-info-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline nil))))
 '(compilation-leave-directory-face ((((class color) (min-colors 89)) (:foreground "#859900" :underline nil))))
 '(compilation-line-face ((((class color) (min-colors 89)) (:foreground "#859900" :underline nil))))
 '(compilation-line-number ((((class color) (min-colors 89)) (:foreground "#859900" :underline nil))))
 '(compilation-warning ((((class color) (min-colors 89)) (:inherit warning :underline nil))))
 '(compilation-warning-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal :underline nil))))
 '(compilation-mode-line-exit ((((class color) (min-colors 89)) (:inherit compilation-info :foreground "#859900" :weight bold))))
 '(compilation-mode-line-fail ((((class color) (min-colors 89)) (:inherit compilation-error :foreground "#dc322f" :weight bold))))
 '(compilation-mode-line-run ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(cua-global-mark ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3"))))
 '(cua-rectangle ((((class color) (min-colors 89)) (:inherit region :background "#d33682" :foreground "#fdf6e3"))))
 '(cua-rectangle-noselect ((((class color) (min-colors 89)) (:inherit region :background "#eee8d5" :foreground "#93a1a1"))))
 '(diary ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(dired-directory ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight normal))))
 '(dired-flagged ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(dired-header ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#268bd2"))))
 '(dired-ignored ((((class color) (min-colors 89)) (:inherit shadow))))
 '(dired-mark ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(dired-marked ((((class color) (min-colors 89)) (:foreground "#d33682" :weight bold))))
 '(dired-perm-write ((((class color) (min-colors 89)) (:foreground "#657b83" :underline t))))
 '(dired-symlink ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight normal :slant italic))))
 '(dired-warning ((((class color) (min-colors 89)) (:foreground "#cb4b16" :underline t))))
 '(dired-async-message ((((class color) (min-colors 89)) (:background "#DEB542"))))
 '(dired-async-mode-message ((((class color) (min-colors 89)) (:background "#FF6E64"))))
 '(dired-efap-face ((((class color) (min-colors 89)) (:box nil :background "#eee8d5" :foreground "#586e75" :underline "#cccec4" :weight bold))))
 '(dropdown-list-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#2aa198"))))
 '(dropdown-list-selection-face ((((class color) (min-colors 89)) (:background "#69CABF" :foreground "#00736F"))))
 '(ecb-default-highlight-face ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#fdf6e3"))))
 '(ecb-history-bucket-node-dir-soure-path-face ((((class color) (min-colors 89)) (:inherit ecb-history-bucket-node-face :foreground "#b58900"))))
 '(ecb-source-in-directories-buffer-face ((((class color) (min-colors 89)) (:inherit ecb-directories-general-face :foreground "#657b83"))))
 '(ecb-history-dead-buffer-face ((((class color) (min-colors 89)) (:inherit ecb-history-general-face :foreground "#93a1a1"))))
 '(ecb-directory-not-accessible-face ((((class color) (min-colors 89)) (:inherit ecb-directories-general-face :foreground "#93a1a1"))))
 '(ecb-bucket-node-face ((((class color) (min-colors 89)) (:inherit ecb-default-general-face :weight normal :foreground "#268bd2"))))
 '(ecb-tag-header-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(ecb-analyse-bucket-element-face ((((class color) (min-colors 89)) (:inherit ecb-analyse-general-face :foreground "#859900"))))
 '(ecb-directories-general-face ((((class color) (min-colors 89)) (:inherit ecb-default-general-face :height 1.0))))
 '(ecb-method-non-semantic-face ((((class color) (min-colors 89)) (:inherit ecb-methods-general-face :foreground "#2aa198"))))
 '(ecb-mode-line-prefix-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(ecb-tree-guide-line-face ((((class color) (min-colors 89)) (:inherit ecb-default-general-face :foreground "#eee8d5" :height 1.0))))
 '(ee-bookmarked ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(ee-category ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(ee-link ((((class color) (min-colors 89)) (:inherit link))))
 '(ee-link-visited ((((class color) (min-colors 89)) (:inherit link-visited))))
 '(ee-marked ((((class color) (min-colors 89)) (:foreground "#d33682" :weight bold))))
 '(ee-omitted ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(ee-shadow ((((class color) (min-colors 89)) (:inherit shadow))))
 '(enh-ruby-string-delimiter-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(enh-ruby-heredoc-delimiter-face ((((class color) (min-colors 89)) (:inherit enh-ruby-string-delimiter-face))))
 '(enh-ruby-regexp-delimiter-face ((((class color) (min-colors 89)) (:inherit enh-ruby-string-delimiter-face))))
 '(enh-ruby-op-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(erm-syn-errline ((((class color) (min-colors 89)) (:inherit flymake-errline))))
 '(erm-syn-warnline ((((class color) (min-colors 89)) (:inherit flymake-warnline))))
 '(grep-context-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(grep-error-face ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold :underline t))))
 '(grep-hit-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(grep-match-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(isearch-fail ((((class color) (min-colors 89)) (:foreground "#dc322f" :background "#fdf6e3" :bold t))))
 '(Man-overstrike ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(Man-reverse ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(Man-underline ((((class color) (min-colors 89)) (:foreground "#859900" :underline t))))
 '(menu ((((class color) (min-colors 89)) (:foreground "#657b83" :background "#fdf6e3"))))
 '(mode-line-buffer-id ((((class color) (min-colors 89)) (:foreground "#586e75" :weight bold))))
 '(header-line ((((class color) (min-colors 89)) (:inverse-video unspecified :overline nil :underline "#eee8d5" :foreground "#657b83" :background "#fdf6e3" :box (:line-width 2 :color "#fdf6e3" :style unspecified)))))
 '(region ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#586e75"))))
 '(secondary-selection ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(trailing-whitespace ((((class color) (min-colors 89)) (:background "#dc322f"))))
 '(vertical-border ((((class color) (min-colors 89)) (:foreground "#cccec4"))))
 '(font-lock-builtin-face ((((class color) (min-colors 89)) (:foreground "#657b83" :weight bold :slant normal))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant normal))))
 '(font-lock-comment-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(font-lock-constant-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(font-lock-doc-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :slant normal))))
 '(font-lock-function-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-keyword-face ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(font-lock-negation-char-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-regexp-grouping-construct ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(font-lock-regexp-grouping-backslash ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(font-lock-type-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(font-lock-warning-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold :underline t))))
 '(c-annotation-face ((((class color) (min-colors 89)) (:inherit font-lock-constant-face))))
 '(ace-jump-face-background ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3" :inverse-video nil))))
 '(ace-jump-face-foreground ((((class color) (min-colors 89)) (:foreground "#dc322f" :background "#fdf6e3" :inverse-video nil :weight bold))))
 '(font-latex-bold-face ((((class color) (min-colors 89)) (:inherit bold :foreground "#586e75"))))
 '(font-latex-doctex-documentation-face ((((class color) (min-colors 89)) (:background unspecified))))
 '(font-latex-doctex-preprocessor-face ((((class color) (min-colors 89)) (:inherit (font-latex-doctex-documentation-face font-lock-builtin-face font-lock-preprocessor-face)))))
 '(font-latex-italic-face ((((class color) (min-colors 89)) (:inherit italic :foreground "#586e75"))))
 '(font-latex-math-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(font-latex-sectioning-0-face ((((class color) (min-colors 89)) (:inherit font-latex-sectioning-1-face :height 1.1))))
 '(font-latex-sectioning-1-face ((((class color) (min-colors 89)) (:inherit font-latex-sectioning-2-face :height 1.1))))
 '(font-latex-sectioning-2-face ((((class color) (min-colors 89)) (:inherit font-latex-sectioning-3-face :height 1.1))))
 '(font-latex-sectioning-3-face ((((class color) (min-colors 89)) (:inherit font-latex-sectioning-4-face :height 1.1))))
 '(font-latex-sectioning-4-face ((((class color) (min-colors 89)) (:inherit font-latex-sectioning-5-face :height 1.1))))
 '(font-latex-sectioning-5-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#b58900" :weight bold))))
 '(font-latex-sedate-face ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(font-latex-slide-title-face ((((class color) (min-colors 89)) (:inherit (variable-pitch font-lock-type-face) :weight bold :height 1.2))))
 '(font-latex-string-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(font-latex-subscript-face ((((class color) (min-colors 89)) (:height 0.8))))
 '(font-latex-superscript-face ((((class color) (min-colors 89)) (:height 0.8))))
 '(font-latex-verbatim-face ((((class color) (min-colors 89)) (:inherit fixed-pitch :foreground "#657b83" :slant italic))))
 '(font-latex-warning-face ((((class color) (min-colors 89)) (:inherit bold :foreground "#cb4b16"))))
 '(ac-completion-face ((((class color) (min-colors 89)) (:foreground "#586e75" :underline t))))
 '(ac-gtags-candidate-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#268bd2"))))
 '(ac-gtags-selection-face ((((class color) (min-colors 89)) (:background "#69B7F0" :foreground "#00629D"))))
 '(ac-yasnippet-candidate-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900"))))
 '(ac-yasnippet-selection-face ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#7B6000"))))
 '(ahs-definition-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified :slant normal))))
 '(ahs-edit-mode-face ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#d33682"))))
 '(ahs-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(ahs-plugin-bod-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(ahs-plugin-defalt-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(ahs-plugin-whole-buffer-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(ahs-warning-face ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(android-mode-debug-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(android-mode-error-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(android-mode-info-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(android-mode-verbose-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(android-mode-warning-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(bm-face ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#fdf6e3"))))
 '(bm-fringe-face ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#fdf6e3"))))
 '(bm-fringe-persistent-face ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#fdf6e3"))))
 '(bm-persistent-face ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#fdf6e3"))))
 '(cfw:face-day-title ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(cfw:face-annotation ((((class color) (min-colors 89)) (:inherit cfw:face-day-title :foreground "#b58900"))))
 '(cfw:face-default-content ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(cfw:face-default-day ((((class color) (min-colors 89)) (:inherit cfw:face-day-title :weight bold))))
 '(cfw:face-disable ((((class color) (min-colors 89)) (:inherit cfw:face-day-title :foreground "#93a1a1"))))
 '(cfw:face-grid ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(cfw:face-header ((((class color) (min-colors 89)) (:foreground "#00629D" :background "#69B7F0" :weight bold))))
 '(cfw:face-holiday ((((class color) (min-colors 89)) (:background nil :foreground "#dc322f" :weight bold))))
 '(cfw:face-periods ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(cfw:face-select ((((class color) (min-colors 89)) (:background "#F771AC" :foreground "#93115C"))))
 '(cfw:face-saturday ((((class color) (min-colors 89)) (:foreground "#00736F" :background "#69CABF"))))
 '(cfw:face-sunday ((((class color) (min-colors 89)) (:foreground "#990A1B" :background "#FF6E64" :weight bold))))
 '(cfw:face-title ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#b58900" :weight bold :height 1.3))))
 '(cfw:face-today ((((class color) (min-colors 89)) (:weight bold :background "#eee8d5" :foreground nil))))
 '(cfw:face-today-title ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#7B6000" :weight bold))))
 '(cfw:face-toolbar ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(cfw:face-toolbar-button-off ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#7B6000" :weight bold))))
 '(cfw:face-toolbar-button-on ((((class color) (min-colors 89)) (:background "#7B6000" :foreground "#DEB542" :weight bold))))
 '(clojure-test-failure-face ((t (:foreground "#cb4b16" :weight bold :underline t))))
 '(clojure-test-error-face ((t (:foreground "#dc322f" :weight bold :underline t))))
 '(clojure-test-success-face ((t (:foreground "#859900" :weight bold :underline t))))
 '(company-tooltip ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#2aa198"))))
 '(company-tooltip-selection ((((class color) (min-colors 89)) (:background "#69CABF" :foreground "#00736F"))))
 '(company-tooltip-mouse ((((class color) (min-colors 89)) (:background "#00736F" :foreground "#69CABF"))))
 '(company-tooltip-common ((((class color) (min-colors 89)) (:foreground "#586e75" :underline t))))
 '(company-tooltip-common-selection ((((class color) (min-colors 89)) (:foreground "#586e75" :underline t))))
 '(company-scrollbar-fg ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#657b83"))))
 '(company-scrollbar-bg ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#2aa198"))))
 '(company-preview ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#2aa198"))))
 '(company-preview-common ((((class color) (min-colors 89)) (:foreground "#586e75" :underline t))))
 '(cscope-file-face ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(cscope-function-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(cscope-line-number-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(cscope-line-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(cscope-mouse-face ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#657b83"))))
 '(ctbl:face-cell-select ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :underline "#586e75" :weight bold))))
 '(ctbl:face-continue-bar ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900"))))
 '(ctbl:face-row-select ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83" :underline t))))
 '(coffee-mode-class-name ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(coffee-mode-function-param ((((class color) (min-colors 89)) (:foreground "#6c71c4" :slant italic))))
 '(custom-face-tag ((((class color) (min-colors 89)) (:inherit variable-pitch :height 1.2 :foreground "#6c71c4" :weight normal))))
 '(custom-variable-tag ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#2aa198" :height 1.2))))
 '(custom-comment-tag ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(custom-group-tag ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#268bd2" :height 1.2))))
 '(custom-group-tag-1 ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#dc322f" :height 1.2))))
 '(custom-state ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(custom-button ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :box (:line-width 2 :style released-button)))))
 '(custom-button-mouse ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#eee8d5" :box (:line-width 2 :style released-button)))))
 '(custom-button-pressed ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#586e75" :box (:line-width 2 :style pressed-button)))))
 '(custom-button-unraised ((((class color) (min-colors 89)) (:inherit underline))))
 '(custom-button-pressed-unraised ((((class color) (min-colors 89)) (:inherit custom-button-unraised :foreground "#d33682"))))
 '(diff-added ((((class color) (min-colors 89)) (:foreground "#859900" :background nil))))
 '(diff-changed ((((class color) (min-colors 89)) (:foreground "#268bd2" :background nil))))
 '(diff-removed ((((class color) (min-colors 89)) (:foreground "#dc322f" :background nil))))
 '(diff-header ((((class color) (min-colors 89)) (:background "#fdf6e3"))))
 '(diff-file-header ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83" :weight bold))))
 '(diff-refine-added ((((class color) (min-colors 89)) :foreground "#fdf6e3" :background "#859900")))
 '(diff-refine-change ((((class color) (min-colors 89)) :foreground "#fdf6e3" :background "#268bd2")))
 '(diff-refine-removed ((((class color) (min-colors 89)) (:foreground "#fdf6e3" :background "#dc322f"))))
 '(ediff-fine-diff-A ((((class color) (min-colors 89)) (:background "#F2804F"))))
 '(ediff-fine-diff-B ((((class color) (min-colors 89)) (:background "#B4C342"))))
 '(ediff-fine-diff-C ((((class color) (min-colors 89)) (:background "#DEB542"))))
 '(ediff-current-diff-C ((((class color) (min-colors 89)) (:background "#69B7F0"))))
 '(ediff-even-diff-A ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#002b36"))))
 '(ediff-odd-diff-A ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#fdf6e3"))))
 '(ediff-even-diff-B ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#fdf6e3"))))
 '(ediff-odd-diff-B ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#fdf6e3"))))
 '(ediff-even-diff-C ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#657b83"))))
 '(ediff-odd-diff-C ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#fdf6e3"))))
 '(diff-hl-change ((((class color) (min-colors 89)) (:background "#69B7F0" :foreground "#00629D"))))
 '(diff-hl-delete ((((class color) (min-colors 89)) (:background "#FF6E64" :foreground "#990A1B"))))
 '(diff-hl-insert ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#546E00"))))
 '(diff-hl-unknown ((((class color) (min-colors 89)) (:background "#69CABF" :foreground "#00736F"))))
 '(edts-face-error-line ((((supports :underline (:style line)) (class color) (min-colors 89)) (:underline (:style line :color "#FF6E64") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#990A1B" :background "#FF6E64" :weight bold :underline t))))
 '(edts-face-warning-line ((((supports :underline (:style line)) (class color) (min-colors 89)) (:underline (:style line :color "#DEB542") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#7B6000" :background "#DEB542" :weight bold :underline t))))
 '(edts-face-error-fringe-bitmap ((((class color) (min-colors 89)) (:foreground "#FF6E64" :background unspecified :weight bold))))
 '(edts-face-warning-fringe-bitmap ((((class color) (min-colors 89)) (:foreground "#DEB542" :background unspecified :weight bold))))
 '(edts-face-error-mode-line ((((class color) (min-colors 89)) (:background "#FF6E64" :foreground unspecified))))
 '(edts-face-warning-mode-line ((((class color) (min-colors 89)) (:background "#DEB542" :foreground unspecified))))
 '(elfeed-search-date-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(elfeed-search-feed-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(elfeed-search-tag-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(elfeed-search-title-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(epc:face-title ((((class color) (min-colors 89)) (:foreground "#268bd2" :background "#fdf6e3" :weight normal :underline nil))))
 '(eshell-prompt ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(eshell-ls-archive ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(eshell-ls-backup ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(eshell-ls-clutter ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(eshell-ls-directory ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(eshell-ls-executable ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(eshell-ls-unreadable ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(eshell-ls-missing ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(eshell-ls-product ((((class color) (min-colors 89)) (:inherit font-lock-doc-face))))
 '(eshell-ls-special ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(eshell-ls-symlink ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight bold))))
 '(fic-author-face ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#cb4b16" :underline t :slant italic))))
 '(fic-face ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#cb4b16" :weight normal :slant italic))))
 '(font-lock-fic-face ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#cb4b16" :weight normal :slant italic))))
 '(fixmee-notice-face ((((class color) (min-colors 89)) (:background nil :foreground "#586e75" :underline nil :slant italic :weight bold))))
 '(flx-highlight-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight normal :underline nil))))
 '(flymake-infoline ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#859900") :inherit unspecified :foreground unspecified :background unspecified)) (((class color) (min-colors 89)) (:foreground "#546E00" :background "#B4C342"))))
 '(flymake-warnline ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#b58900") :inherit unspecified :foreground unspecified :background unspecified)) (((class color) (min-colors 89)) (:foreground "#7B6000" :background "#DEB542" :weight bold :underline t))))
 '(flycheck-error ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#dc322f") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#990A1B" :background "#FF6E64" :weight bold :underline t))))
 '(flycheck-warning ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#b58900") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#7B6000" :background "#DEB542" :weight bold :underline t))))
 '(flycheck-info ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#268bd2") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#00629D" :background "#69B7F0" :weight bold :underline t))))
 '(flycheck-fringe-warning ((((class color) (min-colors 89)) (:foreground "#7B6000" :background "#DEB542" :weight bold))))
 '(flyspell-duplicate ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#b58900") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#b58900" :weight bold :underline t))))
 '(flyspell-incorrect ((((supports :underline (:style wave)) (class color) (min-colors 89)) (:underline (:style wave :color "#dc322f") :inherit unspecified)) (((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold :underline t))))
 '(erc-action-face ((((class color) (min-colors 89)) (:inherit erc-default-face))))
 '(erc-bold-face ((((class color) (min-colors 89)) (:weight bold))))
 '(erc-current-nick-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(erc-dangerous-host-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(erc-default-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(erc-highlight-face ((((class color) (min-colors 89)) (:inherit erc-default-face :background "#eee8d5"))))
 '(erc-direct-msg-face ((((class color) (min-colors 89)) (:inherit erc-default-face))))
 '(erc-error-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(erc-fool-face ((((class color) (min-colors 89)) (:inherit erc-default-face))))
 '(erc-input-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(erc-keyword-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(erc-nick-default-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(erc-my-nick-face ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(erc-nick-msg-face ((((class color) (min-colors 89)) (:inherit erc-default-face))))
 '(erc-notice-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(erc-pal-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(erc-prompt-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :background "#fdf6e3" :weight bold))))
 '(erc-timestamp-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(erc-underline-face ((t (:underline t))))
 '(git-gutter:added ((((class color) (min-colors 89)) (:weight normal :foreground "#859900" :background "#fdf6e3"))))
 '(git-gutter:deleted ((((class color) (min-colors 89)) (:weight normal :foreground "#dc322f" :background "#fdf6e3"))))
 '(git-gutter:modified ((((class color) (min-colors 89)) (:weight normal :foreground "#268bd2" :background "#fdf6e3"))))
 '(git-gutter:unchanged ((((class color) (min-colors 89)) (:weight normal :foreground "#93a1a1" :background "#fdf6e3"))))
 '(git-gutter-fr:added ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(git-gutter-fr:deleted ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(git-gutter+-added ((((class color) (min-colors 89)) (:background "#859900" :foreground "#fdf6e3" :weight bold))))
 '(git-gutter+-deleted ((((class color) (min-colors 89)) (:background "#dc322f" :foreground "#fdf6e3" :weight bold))))
 '(git-gutter+-modified ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#fdf6e3" :weight bold))))
 '(git-gutter+-unchanged ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#fdf6e3" :weight bold))))
 '(git-gutter-fr+-added ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(git-gutter-fr+-deleted ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(git-gutter-fr+-modified ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(guide-key/highlight-command-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(guide-key/key-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(guide-key/prefix-command-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-group-mail-1 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-1-empty))))
 '(gnus-group-mail-1-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-1-empty))))
 '(gnus-group-mail-2 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-2-empty))))
 '(gnus-group-mail-2-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-2-empty))))
 '(gnus-group-mail-3 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-3-empty))))
 '(gnus-group-mail-3-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-3-empty))))
 '(gnus-group-mail-low ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-mail-low-empty))))
 '(gnus-group-mail-low-empty ((((class color) (min-colors 89)) (:inherit gnus-group-news-low-empty))))
 '(gnus-group-news-1 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-1-empty))))
 '(gnus-group-news-2 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-2-empty))))
 '(gnus-group-news-3 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-3-empty))))
 '(gnus-group-news-4 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-4-empty))))
 '(gnus-group-news-5 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-5-empty))))
 '(gnus-group-news-6 ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-6-empty))))
 '(gnus-group-news-low ((((class color) (min-colors 89)) (:weight bold :inherit gnus-group-news-low-empty))))
 '(gnus-header-content ((((class color) (min-colors 89)) (:inherit message-header-other))))
 '(gnus-header-from ((((class color) (min-colors 89)) (:inherit message-header-other))))
 '(gnus-header-name ((((class color) (min-colors 89)) (:inherit message-header-name))))
 '(gnus-header-newsgroups ((((class color) (min-colors 89)) (:inherit message-header-other))))
 '(gnus-header-subject ((((class color) (min-colors 89)) (:inherit message-header-subject))))
 '(gnus-summary-cancelled ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(gnus-summary-high-ancient ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(gnus-summary-high-read ((((class color) (min-colors 89)) (:foreground "#859900" :weight bold))))
 '(gnus-summary-high-ticked ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(gnus-summary-high-unread ((((class color) (min-colors 89)) (:foreground "#657b83" :weight bold))))
 '(gnus-summary-low-ancient ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-summary-low-read ((t (:foreground "#859900"))))
 '(gnus-summary-low-ticked ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(gnus-summary-low-unread ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(gnus-summary-normal-ancient ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-summary-normal-read ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-summary-normal-ticked ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(gnus-summary-normal-unread ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(gnus-summary-selected ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(gnus-cite-1 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-cite-2 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-cite-3 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-cite-4 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-cite-5 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-cite-6 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-cite-7 ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(gnus-cite-8 ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(gnus-cite-9 ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(gnus-cite-10 ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(gnus-cite-11 ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(gnus-group-news-1-empty ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(gnus-group-news-2-empty ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-group-news-3-empty ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(gnus-group-news-4-empty ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-group-news-5-empty ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(gnus-group-news-6-empty ((((class color) (min-colors 89)) (:foreground "#69B7F0"))))
 '(gnus-group-news-low-empty ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(gnus-signature ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(gnus-x-face ((((class color) (min-colors 89)) (:background "#657b83" :foreground "#fdf6e3"))))
 '(helm-apt-deinstalled ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(helm-apt-installed ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-bookmark-directory ((((class color) (min-colors 89)) (:inherit helm-ff-directory))))
 '(helm-bookmark-file ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(helm-bookmark-gnus ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(helm-bookmark-info ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-bookmark-man ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(helm-bookmark-w3m ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(helm-bookmarks-su ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(helm-buffer-not-saved ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(helm-buffer-saved-out ((((class color) (min-colors 89)) (:foreground "#dc322f" :background "#fdf6e3" :inverse-video t))))
 '(helm-buffer-size ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(helm-candidate-number ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :bold t))))
 '(helm-ff-directory ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#268bd2"))))
 '(helm-ff-executable ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-ff-file ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83"))))
 '(helm-ff-invalid-symlink ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#cb4b16" :slant italic))))
 '(helm-ff-prefix ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3"))))
 '(helm-ff-symlink ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(helm-grep-file ((((class color) (min-colors 89)) (:foreground "#2aa198" :underline t))))
 '(helm-grep-finish ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-grep-lineno ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(helm-grep-match ((((class color) (min-colors 89)) (:inherit match))))
 '(helm-grep-running ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(helm-header ((((class color) (min-colors 89)) (:inherit header-line))))
 '(helm-lisp-completion-info ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(helm-lisp-show-completion ((((class color) (min-colors 89)) (:foreground "#b58900" :background "#eee8d5" :bold t))))
 '(helm-M-x-key ((((class color) (min-colors 89)) (:foreground "#cb4b16" :underline t))))
 '(helm-moccur-buffer ((((class color) (min-colors 89)) (:foreground "#2aa198" :underline t))))
 '(helm-match ((((class color) (min-colors 89)) (:inherit match))))
 '(helm-selection ((((class color) (min-colors 89)) (:background "#eee8d5" :underline t))))
 '(helm-selection-line ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :underline nil))))
 '(helm-separator ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(helm-source-header ((((class color) (min-colors 89)) (:background "#69B7F0" :foreground "#fdf6e3" :underline nil))))
 '(helm-time-zone-current ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-time-zone-home ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(helm-visible-mark ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#d33682" :bold t))))
 '(helm-css-scss-selector-depth-face-1 ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(helm-css-scss-selector-depth-face-2 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(helm-css-scss-selector-depth-face-3 ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(helm-css-scss-selector-depth-face-4 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(helm-css-scss-selector-depth-face-5 ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(helm-css-scss-selector-depth-face-6 ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(helm-css-scss-target-line-face ((((class color) (min-colors 89)) (:background unspecified :foreground "#d33682"))))
 '(helm-swoop-target-line-face ((((class color) (min-colors 89)) (:foreground unspecified :background "#eee8d5"))))
 '(helm-swoop-target-line-block-face ((((class color) (min-colors 89)) (:foreground unspecified :background "#eee8d5"))))
 '(helm-swoop-target-word-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(hi-yellow ((((class color) (min-colors 89)) (:foreground "#867b3a" :background "#f2e5c0"))))
 '(hi-pink ((((class color) (min-colors 89)) (:foreground "#95527b" :background "#f6d9d4"))))
 '(hi-green ((((class color) (min-colors 89)) (:foreground "#6e833a" :background "#ebe8c0"))))
 '(hi-blue ((((class color) (min-colors 89)) (:foreground "#3f7ca3" :background "#dce5e0"))))
 '(hi-black-b ((((class color) (min-colors 89)) (:foreground "#586e75" :background "#fdf6e3" :weight bold))))
 '(hi-blue-b ((((class color) (min-colors 89)) (:weight bold :foreground "#37918d" :background "#d2e5d4"))))
 '(hi-green-b ((((class color) (min-colors 89)) (:weight bold :foreground "#778c23" :background "#e5e3b5"))))
 '(hi-red-b ((((class color) (min-colors 89)) (:weight bold :foreground "#b44444" :background "#f6cebf"))))
 '(hi-black-hb ((((class color) (min-colors 89)) (:weight bold :foreground "#586e75" :background "#eee8d5"))))
 '(highlight-changes ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(highlight-changes-delete ((((class color) (min-colors 89)) (:foreground "#dc322f" :underline t))))
 '(highlight-indentation-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(highlight-indentation-current-column-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(highlight-symbol-face ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified))))
 '(hl-line ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(hl-line-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(ido-incomplete-regexp ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight bold))))
 '(ido-indicator ((((class color) (min-colors 89)) (:background "#dc322f" :foreground "#fdf6e3" :width condensed))))
 '(ido-virtual ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(info-title-1 ((((class color) (min-colors 89)) (:foreground "#586e75" :weight bold))))
 '(info-title-2 ((((class color) (min-colors 89)) (:foreground "#586e75" :weight bold))))
 '(info-title-3 ((((class color) (min-colors 89)) (:weight bold))))
 '(info-title-4 ((((class color) (min-colors 89)) (:weight bold))))
 '(info-node ((((class color) (min-colors 89)) (:foreground "#586e75" :slant italic :weight bold))))
 '(info-header-node ((((class color) (min-colors 89)) (:inherit info-node))))
 '(info-header-xref ((((class color) (min-colors 89)) (:inherit info-xref))))
 '(info-index-match ((((class color) (min-colors 89)) (:inherit match))))
 '(info-menu-header ((((class color) (min-colors 89)) (:inherit variable-pitch :weight bold))))
 '(info-menu-star ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(info-xref ((((class color) (min-colors 89)) (:inherit link))))
 '(info-xref-visited ((((class color) (min-colors 89)) (:inherit (link-visited info-xref)))))
 '(info-file ((((class color) (min-colors 89)) (:foreground "#b58900" :background "#eee8d5"))))
 '(info-menu ((((class color) (min-colors 89)) (:foreground "#6c71c4" :background "#eee8d5"))))
 '(info-single-quote ((((class color) (min-colors 89)) (:foreground "#2aa198" :inherit font-lock-string-face))))
 '(info-quoted-name ((((class color) (min-colors 89)) (:foreground "#cb4b16" :inherit font-lock-string-face))))
 '(info-string ((((class color) (min-colors 89)) (:foreground "#268bd2" :inherit font-lock-string-face))))
 '(info-command-ref-item ((((class color) (min-colors 89)) (:foreground "#859900" :background "#eee8d5"))))
 '(info-constant-ref-item ((((class color) (min-colors 89)) (:foreground "#dc322f" :background "#eee8d5"))))
 '(info-function-ref-item ((((class color) (min-colors 89)) (:foreground "#2aa198" :background "#eee8d5"))))
 '(info-macro-ref-item ((((class color) (min-colors 89)) (:foreground "#859900" :background "#eee8d5"))))
 '(info-reference-item ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(info-special-form-ref-item ((((class color) (min-colors 89)) (:foreground "#d33682" :background "#eee8d5"))))
 '(info-syntax-class-item ((((class color) (min-colors 89)) (:foreground "#d33682" :background "#eee8d5"))))
 '(info-user-option-ref-item ((((class color) (min-colors 89)) (:foreground "#cb4b16" :background "#eee8d5"))))
 '(jabber-activity-face ((((class color) (min-colors 89)) (:weight bold :foreground "#dc322f"))))
 '(jabber-activity-personal-face ((((class color) (min-colors 89)) (:weight bold :foreground "#268bd2"))))
 '(jabber-chat-error ((((class color) (min-colors 89)) (:weight bold :foreground "#dc322f"))))
 '(jabber-chat-prompt-foreign ((((class color) (min-colors 89)) (:weight bold :foreground "#dc322f"))))
 '(jabber-chat-prompt-local ((((class color) (min-colors 89)) (:weight bold :foreground "#268bd2"))))
 '(jabber-chat-prompt-system ((((class color) (min-colors 89)) (:weight bold :foreground "#859900"))))
 '(jabber-chat-text-foreign ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(jabber-chat-text-local ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(jabber-chat-rare-time-face ((((class color) (min-colors 89)) (:underline t :foreground "#859900"))))
 '(jabber-roster-user-away ((((class color) (min-colors 89)) (:slant italic :foreground "#859900"))))
 '(jabber-roster-user-chatty ((((class color) (min-colors 89)) (:weight bold :foreground "#cb4b16"))))
 '(jabber-roster-user-dnd ((((class color) (min-colors 89)) (:slant italic :foreground "#dc322f"))))
 '(jabber-roster-user-error ((((class color) (min-colors 89)) (:weight light :slant italic :foreground "#dc322f"))))
 '(jabber-roster-user-offline ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(jabber-roster-user-online ((((class color) (min-colors 89)) (:weight bold :foreground "#268bd2"))))
 '(jabber-roster-user-xa ((((class color) (min-colors 89)) (:slant italic :foreground "#d33682"))))
 '(js2-external-variable ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(js2-function-param ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(js2-instance-member ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(js2-jsdoc-html-tag-delimiter ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(js2-jsdoc-html-tag-name ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(js2-jsdoc-tag ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(js2-jsdoc-type ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(js2-jsdoc-value ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(js2-magic-paren ((((class color) (min-colors 89)) (:underline t))))
 '(js2-private-function-call ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(js2-private-member ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(jedi:highlight-function-argument ((((class color) (min-colors 89)) (:inherit bold))))
 '(bg:kite-dataReceived ((((class color) (min-colors 89)) (:background "#d33682"))))
 '(bg:kite-receiveHeadersEnd ((((class color) (min-colors 89)) (:background "#859900"))))
 '(bg:kite-requestStart ((((class color) (min-colors 89)) (:background "#dc322f"))))
 '(bg:kite-sendEnd ((((class color) (min-colors 89)) (:background "#2aa198"))))
 '(bg:kite-table-head ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(bg:kite-tick ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(kite-css-computed-proprietary-unused-property ((((class color) (min-colors 89)) (:inherit kite-css-proprietary-property :foreground "#268bd2"))))
 '(kite-css-computed-unused-property ((((class color) (min-colors 89)) (:inherit kite-css-property :foreground "#268bd2"))))
 '(kite-css-value-widget-error ((((class color) (min-colors 89)) (:background "#F2804F" :foreground "#8B2C02"))))
 '(kite-css-value-widget-modified ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900"))))
 '(kite-delimited-data-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(kite-delimiter-face ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(kite-modified-attribute-local-name-face ((((class color) (min-colors 89)) (:inherit kite-attribute-local-name-face :background "#eee8d5"))))
 '(kite-modified-attribute-value-face ((((class color) (min-colors 89)) (:inherit kite-attribute-value-face :background "#eee8d5"))))
 '(kite-modified-element-local-name-face ((((class color) (min-colors 89)) (:inherit kite-element-local-name-face :background "#eee8d5"))))
 '(kite-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(kite-proto-property-name ((((class color) (min-colors 89)) (:inherit default :foreground "#eee8d5"))))
 '(kite-ref-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(kite-session-closed ((((class color) (min-colors 89)) (:inherit default :background "#dc322f"))))
 '(kite-text-face ((((class color) (min-colors 89)) (:background nil :foreground "#93a1a1"))))
 '(kite-node-highlight-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(bg:kite-pageStart ((((class color) (min-colors 89)) nil)))
 '(kite-attribute-colon-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-attribute-local-name-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-attribute-prefix-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-attribute-value-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-attribute-value-face ((((class color) (min-colors 89)) (:inherit kite-delimited-data-face))))
 '(kite-boolean ((((class color) (min-colors 89)) (:inherit nxml-char-ref-number))))
 '(kite-cdata-section-CDATA-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-cdata-section-content-face ((((class color) (min-colors 89)) (:inherit kite-text-face))))
 '(kite-cdata-section-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-char-ref-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-ref-face))))
 '(kite-char-ref-number-face ((((class color) (min-colors 89)) (:inherit kite-ref-face))))
 '(kite-comment-content-face ((((class color) (min-colors 89)) (:slant italic))))
 '(kite-comment-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-console-prompt-face ((((class color) (min-colors 89)) (:inherit default))))
 '(kite-css-property ((((class color) (min-colors 89)) (:inherit css-property))))
 '(kite-css-proprietary-property ((((class color) (min-colors 89)) (:inherit css-proprietary-property))))
 '(kite-css-selected-overlay ((((class color) (min-colors 89)) (:inherit secondary-selection))))
 '(kite-css-selector ((((class color) (min-colors 89)) (:inherit css-selector))))
 '(kite-element-colon-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-element-local-name-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-element-prefix-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-entity-ref-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-ref-face))))
 '(kite-entity-ref-name-face ((((class color) (min-colors 89)) (:inherit kite-ref-face))))
 '(kite-hash-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-link-face ((((class color) (min-colors 89)) (:inherit change-log-file))))
 '(kite-loading ((((class color) (min-colors 89)) (:inherit font-lock-comment))))
 '(kite-log-debug ((((class color) (min-colors 89)) (:inherit font-lock-comment))))
 '(kite-log-error ((((class color) (min-colors 89)) (:inherit error))))
 '(kite-log-log ((((class color) (min-colors 89)) (:inherit default))))
 '(kite-log-warning ((((class color) (min-colors 89)) (:inherit warning))))
 '(kite-markup-declaration-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-namespace-attribute-colon-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-namespace-attribute-prefix-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-namespace-attribute-value-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-attribute-value-delimiter-face))))
 '(kite-namespace-attribute-value-face ((((class color) (min-colors 89)) (:inherit kite-attribute-value-face))))
 '(kite-namespace-attribute-xmlns-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-null ((((class color) (min-colors 89)) (:inherit nxml-char-ref-number))))
 '(kite-number ((((class color) (min-colors 89)) (:inherit nxml-char-ref-number))))
 '(kite-object ((((class color) (min-colors 89)) (:inherit font-lock-variable-name))))
 '(kite-processing-instruction-content-face ((((class color) (min-colors 89)) (:inherit kite-delimited-data-face))))
 '(kite-processing-instruction-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-processing-instruction-target-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-prolog-keyword-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-prolog-literal-content-face ((((class color) (min-colors 89)) (:inherit kite-delimited-data-face))))
 '(kite-prolog-literal-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-property-name ((((class color) (min-colors 89)) (:inherit default))))
 '(kite-quote ((((class color) (min-colors 89)) (:inherit font-lock-keyword))))
 '(kite-stack-column-number ((((class color) (min-colors 89)) (:inherit kite-number))))
 '(kite-stack-error-message ((((class color) (min-colors 89)) (:inherit default))))
 '(kite-stack-error-type ((((class color) (min-colors 89)) (:inherit error))))
 '(kite-stack-file-name ((((class color) (min-colors 89)) (:inherit link))))
 '(kite-stack-function-name ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(kite-stack-line-number ((((class color) (min-colors 89)) (:inherit kite-number))))
 '(kite-stack-pseudo-file-name ((((class color) (min-colors 89)) (:inherit default))))
 '(kite-string ((((class color) (min-colors 89)) (:inherit font-lock-string))))
 '(kite-table-head ((((class color) (min-colors 89)) (:inherit highlight))))
 '(kite-tag-delimiter-face ((((class color) (min-colors 89)) (:inherit kite-delimiter-face))))
 '(kite-tag-slash-face ((((class color) (min-colors 89)) (:inherit kite-name-face))))
 '(kite-undefined ((((class color) (min-colors 89)) (:inherit nxml-char-ref-number))))
 '(ledger-font-payee-uncleared-face ((t (:foreground "#dc322f"))))
 '(ledger-font-payee-cleared-face ((t (:foreground "#859900" :weight normal))))
 '(ledger-font-xact-highlight-face ((t (:background "#eee8d5"))))
 '(ledger-font-pending-face ((t (:foreground "#b58900" weight: normal))))
 '(ledger-font-other-face ((t (:foreground "#657b83"))))
 '(ledger-font-posting-account-face ((t (:foreground "#2aa198"))))
 '(ledger-font-posting-account-cleared-face ((t (:foreground "#657b83"))))
 '(ledger-font-posting-amount-face ((t (:foreground "#b58900"))))
 '(ledger-font-posting-account-pending-face ((t (:foreground "#b58900"))))
 '(ledger-occur-narrowed-face ((t (:foreground "#002b36" :invisible t))))
 '(ledger-occur-xact-face ((t (:background "#eee8d5"))))
 '(ledger-font-comment-face ((t (:foreground "#93a1a1"))))
 '(ledger-font-reconciler-uncleared-face ((t (:foreground "#dc322f" :weight bold))))
 '(ledger-font-reconciler-cleared-face ((t (:foreground "#657b83" :weight normal))))
 '(ledger-font-reconciler-pending-face ((t (:foreground "#b58900" :weight normal))))
 '(ledger-font-report-clickable-face ((t (:foreground "#b58900" :weight normal))))
 '(linum ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3"))))
 '(lusty-directory-face ((((class color) (min-colors 89)) (:inherit dired-directory))))
 '(lusty-file-face ((((class color) (min-colors 89)) nil)))
 '(lusty-match-face ((((class color) (min-colors 89)) (:inherit ido-first-match))))
 '(lusty-slash-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight bold))))
 '(magit-branch ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight bold))))
 '(magit-item-highlight ((((class color) (min-colors 89)) (:background "#eee8d5" :weight unspecified))))
 '(magit-log-author ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(magit-log-graph ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(magit-log-head-label-bisect-bad ((((class color) (min-colors 89)) (:background "#990A1B" :foreground "#FF6E64" :box 1))))
 '(magit-log-head-label-bisect-good ((((class color) (min-colors 89)) (:background "#546E00" :foreground "#B4C342" :box 1))))
 '(magit-log-head-label-default ((((class color) (min-colors 89)) (:background "#eee8d5" :box 1))))
 '(magit-log-head-label-local ((((class color) (min-colors 89)) (:background "#69B7F0" :foreground "#00629D" :box 1))))
 '(magit-log-head-label-patches ((((class color) (min-colors 89)) (:background "#FF6E64" :foreground "#990A1B" :box 1))))
 '(magit-log-head-label-remote ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#546E00" :box 1))))
 '(magit-log-head-label-tags ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#7B6000" :box 1))))
 '(magit-header ((((class color) (min-colors 89)) (:inherit default))))
 '(magit-log-sha1 ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(magit-cherry-equivalent ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(magit-cherry-unmatched ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(magit-process-ng ((((class color) (min-colors 89)) (:inherit magit-header :foreground "#dc322f"))))
 '(magit-process-ok ((((class color) (min-colors 89)) (:inherit magit-header :foreground "#859900"))))
 '(magit-signature-bad ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(magit-signature-good ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(magit-signature-none ((((class color) (min-colors 89)) (:inherit magit-log-message))))
 '(magit-signature-untrusted ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(magit-whitespace-warning-face ((((class color) (min-colors 89)) (:inherit trailing-whitespace))))
 '(markdown-blockquote-face ((((class color) (min-colors 89)) (:inherit font-lock-doc-face))))
 '(markdown-bold-face ((((class color) (min-colors 89)) (:inherit bold))))
 '(markdown-comment-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :strike-through t))))
 '(markdown-footnote-face ((((class color) (min-colors 89)) (:inherit default))))
 '(markdown-header-delimiter-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(markdown-header-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(markdown-header-face-1 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-face-2 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-face-3 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-face-4 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-face-5 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-face-6 ((((class color) (min-colors 89)) (:inherit markdown-header-face))))
 '(markdown-header-rule-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(markdown-inline-code-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(markdown-italic-face ((((class color) (min-colors 89)) (:inherit italic))))
 '(markdown-language-keyword-face ((((class color) (min-colors 89)) (:inherit default))))
 '(markdown-line-break-face ((((class color) (min-colors 89)) (:inherit default :underline t))))
 '(markdown-link-face ((((class color) (min-colors 89)) (:inherit default :foreground "#b58900"))))
 '(markdown-link-title-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(markdown-list-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(markdown-math-face ((((class color) (min-colors 89)) (:inherit font-lock-string-face))))
 '(markdown-metadata-key-face ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(markdown-metadata-value-face ((((class color) (min-colors 89)) (:inherit default))))
 '(markdown-missing-link-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(markdown-pre-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(markdown-reference-face ((((class color) (min-colors 89)) (:inherit default :foreground "#93a1a1"))))
 '(markdown-url-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(mc/cursor-face ((((class color) (min-colors 89)) (:inherit cursor :inverse-video nil))))
 '(message-cited-text ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(message-header-name ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(message-header-other ((((class color) (min-colors 89)) (:foreground "#657b83" :weight normal))))
 '(message-header-to ((((class color) (min-colors 89)) (:foreground "#657b83" :weight normal))))
 '(message-header-cc ((((class color) (min-colors 89)) (:foreground "#657b83" :weight normal))))
 '(message-header-newsgroups ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(message-header-subject ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight normal))))
 '(message-header-xheader ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(message-mml ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(message-separator ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic))))
 '(mew-face-header-subject ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(mew-face-header-from ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(mew-face-header-date ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-header-to ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-header-key ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-header-private ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-header-important ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(mew-face-header-marginal ((((class color) (min-colors 89)) (:foreground "#657b83" :weight bold))))
 '(mew-face-header-warning ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-header-xmew ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-header-xmew-bad ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-body-url ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(mew-face-body-comment ((((class color) (min-colors 89)) (:foreground "#657b83" :slant italic))))
 '(mew-face-body-cite1 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-body-cite2 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(mew-face-body-cite3 ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(mew-face-body-cite4 ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(mew-face-body-cite5 ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-mark-review ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(mew-face-mark-escape ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-mark-delete ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-mark-unlink ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(mew-face-mark-refile ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-mark-unread ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(mew-face-eof-message ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(mew-face-eof-part ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(paren-face-match ((((class color) (min-colors 89)) (:foreground "#d33682" :background unspecified :weight bold))))
 '(paren-face-mismatch ((((class color) (min-colors 89)) (:foreground "#eee8d5" :background "#dc322f" :weight bold))))
 '(paren-face-no-match ((((class color) (min-colors 89)) (:foreground "#eee8d5" :background "#dc322f" :weight bold))))
 '(mingus-directory-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(mingus-pausing-face ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(mingus-playing-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(mingus-playlist-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(mingus-song-file-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(mingus-stopped-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(moccur-current-line-face ((((class color) (min-colors 89)) (:underline t))))
 '(moccur-edit-done-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3" :slant italic))))
 '(moccur-edit-face ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3"))))
 '(moccur-edit-file-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(moccur-edit-reject-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(moccur-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :weight bold))))
 '(search-buffers-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :weight bold))))
 '(search-buffers-header-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900" :weight bold))))
 '(mu4e-cited-1-face ((((class color) (min-colors 89)) (:foreground "#859900" :slant italic :weight normal))))
 '(mu4e-cited-2-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :slant italic :weight normal))))
 '(mu4e-cited-3-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :slant italic :weight normal))))
 '(mu4e-cited-4-face ((((class color) (min-colors 89)) (:foreground "#b58900" :slant italic :weight normal))))
 '(mu4e-cited-5-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :slant italic :weight normal))))
 '(mu4e-cited-6-face ((((class color) (min-colors 89)) (:foreground "#859900" :slant italic :weight normal))))
 '(mu4e-cited-7-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :slant italic :weight normal))))
 '(mu4e-flagged-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight normal))))
 '(mu4e-unread-face ((((class color) (min-colors 89)) (:foreground "#859900" :weight normal))))
 '(mu4e-view-url-number-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal))))
 '(mu4e-warning-face ((((class color) (min-colors 89)) (:foreground "#dc322f" :slant normal :weight bold))))
 '(mu4e-header-highlight-face ((((class color) (min-colors 89)) (:inherit unspecified :foreground unspecified :background "#eee8d5" :underline unspecified :weight unspecified))))
 '(mu4e-view-contact-face ((((class color) (min-colors 89)) (:foreground "#657b83" :weight normal))))
 '(mu4e-view-header-key-face ((((class color) (min-colors 89)) (:inherit message-header-name :weight normal))))
 '(mu4e-view-header-value-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight normal :slant normal))))
 '(mu4e-view-link-face ((((class color) (min-colors 89)) (:inherit link))))
 '(mu4e-view-special-header-value-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight normal :underline nil))))
 '(mumamo-background-chunk-submode1 ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(nav-face-heading ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(nav-face-button-num ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(nav-face-dir ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(nav-face-hdir ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(nav-face-file ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(nav-face-hfile ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(nav-flash-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(org-agenda-structure ((((class color) (min-colors 89)) (:foreground "#586e75" :background "#eee8d5" :weight bold :slant normal :inverse-video nil :height 1.1 :underline nil :box (:line-width 2 :color "#fdf6e3")))))
 '(org-agenda-calendar-event ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(org-agenda-calendar-sexp ((((class color) (min-colors 89)) (:foreground "#657b83" :slant italic))))
 '(org-agenda-date ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3" :weight normal :box (:line-width 2 :color "#fdf6e3") :inverse-video nil :overline nil :slant normal :height 1.0))))
 '(org-agenda-date-weekend ((((class color) (min-colors 89)) (:inherit org-agenda-date :inverse-video nil :background unspecified :foreground "#93a1a1" :weight unspecified :underline t :overline nil :box unspecified))))
 '(org-agenda-date-today ((((class color) (min-colors 89)) (:inherit org-agenda-date :inverse-video t :weight bold :underline unspecified :overline nil :box unspecified :foreground "#268bd2" :background "#fdf6e3"))))
 '(org-agenda-done ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic))))
 '(org-archived ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight normal))))
 '(org-block ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(org-block-begin-line ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic))))
 '(org-checkbox ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83" :box (:line-width 1 :style released-button)))))
 '(org-code ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(org-date ((((class color) (min-colors 89)) (:foreground "#268bd2" :underline t))))
 '(org-done ((((class color) (min-colors 89)) (:weight bold :foreground "#859900"))))
 '(org-ellipsis ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(org-formula ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(org-headline-done ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-hide ((((class color) (min-colors 89)) (:foreground "#fdf6e3"))))
 '(org-level-1 ((((class color) (min-colors 89)) (:inherit variable-pitch :height 1.3 :foreground "#cb4b16"))))
 '(org-level-2 ((((class color) (min-colors 89)) (:inherit variable-pitch :height 1.2 :foreground "#859900"))))
 '(org-level-3 ((((class color) (min-colors 89)) (:inherit variable-pitch :height 1.15 :foreground "#268bd2"))))
 '(org-level-4 ((((class color) (min-colors 89)) (:inherit variable-pitch :height 1.1 :foreground "#b58900"))))
 '(org-level-5 ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#2aa198"))))
 '(org-level-6 ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#859900"))))
 '(org-level-7 ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#dc322f"))))
 '(org-level-8 ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#268bd2"))))
 '(org-link ((((class color) (min-colors 89)) (:foreground "#b58900" :underline t))))
 '(org-sexp-date ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(org-scheduled ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-scheduled-previously ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(org-scheduled-today ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight normal))))
 '(org-special-keyword ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight bold))))
 '(org-table ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(org-tag ((((class color) (min-colors 89)) (:weight bold))))
 '(org-time-grid ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(org-todo ((((class color) (min-colors 89)) (:foreground "#2aa198" :weight bold))))
 '(org-upcoming-deadline ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal :underline nil))))
 '(org-warning ((((class color) (min-colors 89)) (:foreground "#cb4b16" :weight normal :underline nil))))
 '(org-habit-clear-face ((((class color) (min-colors 89)) (:background "#69B7F0" :foreground "#00629D"))))
 '(org-habit-clear-future-face ((((class color) (min-colors 89)) (:background "#69B7F0"))))
 '(org-habit-ready-face ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#859900"))))
 '(org-habit-ready-future-face ((((class color) (min-colors 89)) (:background "#B4C342"))))
 '(org-habit-alert-face ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#DEB542"))))
 '(org-habit-alert-future-face ((((class color) (min-colors 89)) (:background "#DEB542"))))
 '(org-habit-overdue-face ((((class color) (min-colors 89)) (:background "#dc322f" :foreground "#FF6E64"))))
 '(org-habit-overdue-future-face ((((class color) (min-colors 89)) (:background "#FF6E64"))))
 '(org-agenda-dimmed-todo-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(org-agenda-restriction-lock ((((class color) (min-colors 89)) (:background "#b58900"))))
 '(org-clock-overlay ((((class color) (min-colors 89)) (:background "#b58900"))))
 '(org-column ((((class color) (min-colors 89)) (:background "#eee8d5" :strike-through nil :underline nil :slant normal :weight normal :inherit default))))
 '(org-column-title ((((class color) (min-colors 89)) (:background "#eee8d5" :underline t :weight bold))))
 '(org-date-selected ((((class color) (min-colors 89)) (:foreground "#dc322f" :inverse-video t))))
 '(org-document-info ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(org-document-title ((((class color) (min-colors 89)) (:foreground "#586e75" :weight bold :height 1.3))))
 '(org-drawer ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(org-footnote ((((class color) (min-colors 89)) (:foreground "#d33682" :underline t))))
 '(org-latex-and-export-specials ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(org-mode-line-clock-overrun ((((class color) (min-colors 89)) (:inherit mode-line :background "#dc322f"))))
 '(outline-1 ((((class color) (min-colors 89)) (:inherit org-level-1))))
 '(outline-2 ((((class color) (min-colors 89)) (:inherit org-level-2))))
 '(outline-3 ((((class color) (min-colors 89)) (:inherit org-level-3))))
 '(outline-4 ((((class color) (min-colors 89)) (:inherit org-level-4))))
 '(outline-5 ((((class color) (min-colors 89)) (:inherit org-level-5))))
 '(outline-6 ((((class color) (min-colors 89)) (:inherit org-level-6))))
 '(outline-7 ((((class color) (min-colors 89)) (:inherit org-level-7))))
 '(outline-8 ((((class color) (min-colors 89)) (:inherit org-level-8))))
 '(paren-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(persp-selected-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(pretty-mode-symbol-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal))))
 '(prodigy-green-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(prodigy-red-face ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(prodigy-yellow-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(prodigy-line-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(popup-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(popup-isearch-match ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3"))))
 '(popup-menu-face ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(popup-menu-mouse-face ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#657b83"))))
 '(popup-menu-selection-face ((((class color) (min-colors 89)) (:background "#d33682" :foreground "#fdf6e3"))))
 '(rainbow-blocks-depth-1-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(rainbow-blocks-depth-2-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-blocks-depth-3-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-blocks-depth-4-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(rainbow-blocks-depth-5-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-blocks-depth-6-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-blocks-depth-7-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-blocks-depth-8-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(rainbow-blocks-depth-9-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rainbow-blocks-unmatched-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(rainbow-delimiters-depth-10-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rainbow-delimiters-depth-11-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rainbow-delimiters-depth-12-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(rst-level-1-face ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3"))))
 '(rst-level-2-face ((((class color) (min-colors 89)) (:background "#2aa198" :foreground "#fdf6e3"))))
 '(rst-level-3-face ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#fdf6e3"))))
 '(rst-level-4-face ((((class color) (min-colors 89)) (:background "#6c71c4" :foreground "#fdf6e3"))))
 '(rst-level-5-face ((((class color) (min-colors 89)) (:background "#d33682" :foreground "#fdf6e3"))))
 '(rst-level-6-face ((((class color) (min-colors 89)) (:background "#dc322f" :foreground "#fdf6e3"))))
 '(rpm-spec-dir-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rpm-spec-doc-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(rpm-spec-ghost-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(rpm-spec-macro-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rpm-spec-obsolete-tag-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(rpm-spec-package-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(rpm-spec-section-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(rpm-spec-tag-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(rpm-spec-var-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(sh-quoted-exec ((((class color) (min-colors 89)) (:foreground "#6c71c4" :weight bold))))
 '(sh-escaped-newline ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(sh-heredoc ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold))))
 '(skewer-error-face ((((class color) (min-colors 89)) (:foreground "#cb4b16" :underline nil))))
 '(skewer-repl-log-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(sp-pair-overlay-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(sp-wrap-overlay-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(sp-wrap-tag-overlay-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(sp-show-pair-enclosing ((((class color) (min-colors 89)) (:inherit highlight))))
 '(sp-show-pair-match-face ((((class color) (min-colors 89)) (:background unspecified :foreground "#d33682" :weight bold))))
 '(sp-show-pair-mismatch-face ((((class color) (min-colors 89)) (:foreground "#eee8d5" :background "#dc322f" :weight bold))))
 '(show-paren-mismatch ((((class color) (min-colors 89)) (:foreground "#eee8d5" :background "#dc322f" :weight bold))))
 '(syslog-ip ((((class color) (min-colors 89)) (:background unspecified :foreground "#859900" :underline nil :weight normal :slant normal))))
 '(syslog-hour ((((class color) (min-colors 89)) (:background unspecified :foreground "#b58900"))))
 '(syslog-error ((((class color) (min-colors 89)) (:background unspecified :foreground "#cb4b16" :weight bold))))
 '(syslog-warn ((((class color) (min-colors 89)) (:background unspecified :foreground "#b58900" :weight bold))))
 '(syslog-info ((((class color) (min-colors 89)) (:background unspecified :foreground "#268bd2" :weight bold))))
 '(syslog-debug ((((class color) (min-colors 89)) (:background unspecified :foreground "#2aa198" :weight bold))))
 '(syslog-su ((((class color) (min-colors 89)) (:background unspecified :foreground "#6c71c4" :weight normal))))
 '(slime-repl-inputed-output-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(speedbar-button-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#93a1a1"))))
 '(speedbar-directory-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#268bd2"))))
 '(speedbar-file-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#657b83"))))
 '(speedbar-highlight-face ((((class color) (min-colors 89)) (:inherit variable-pitch :background "#eee8d5"))))
 '(speedbar-selected-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#b58900" :underline t))))
 '(speedbar-separator-face ((((class color) (min-colors 89)) (:inherit variable-pitch :background "#268bd2" :foreground "#fdf6e3" :overline "#69CABF"))))
 '(speedbar-tag-face ((((class color) (min-colors 89)) (:inherit variable-pitch :foreground "#859900"))))
 '(stripe-highlight ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(shm-current-face ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(shm-quarantine-face ((((class color) (min-colors 89)) (:background "#93a1a1"))))
 '(sr-active-path-face ((((class color) (min-colors 89)) (:background "#268bd2" :foreground "#fdf6e3" :height 1.1 :weight bold))))
 '(sr-editing-path-face ((((class color) (min-colors 89)) (:background "#b58900" :foreground "#fdf6e3" :weight bold :height 1.1))))
 '(sr-highlight-path-face ((((class color) (min-colors 89)) (:background "#859900" :foreground "#fdf6e3" :weight bold :height 1.1))))
 '(sr-passive-path-face ((((class color) (min-colors 89)) (:background "#93a1a1" :foreground "#fdf6e3" :weight bold :height 1.1))))
 '(sr-marked-dir-face ((((class color) (min-colors 89)) (:inherit dired-marked))))
 '(sr-marked-file-face ((((class color) (min-colors 89)) (:inherit dired-marked))))
 '(sr-alt-marked-dir-face ((((class color) (min-colors 89)) (:background "#d33682" :foreground "#fdf6e3" :weight bold))))
 '(sr-alt-marked-file-face ((((class color) (min-colors 89)) (:background "#d33682" :foreground "#fdf6e3" :weight bold))))
 '(sr-directory-face ((((class color) (min-colors 89)) (:inherit dired-directory :weight normal))))
 '(sr-symlink-directory-face ((((class color) (min-colors 89)) (:inherit dired-directory :slant italic :weight normal))))
 '(sr-symlink-face ((((class color) (min-colors 89)) (:inherit dired-symlink :slant italic :weight normal))))
 '(sr-broken-link-face ((((class color) (min-colors 89)) (:inherit dired-warning :slant italic :weight normal))))
 '(sr-compressed-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-encrypted-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-log-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-packaged-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-html-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-xml-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(sr-clex-hotchar-face ((((class color) (min-colors 89)) (:background "#dc322f" :foreground "#fdf6e3" :weight bold))))
 '(swoop-face-header-format-line ((((class color) (min-colors 89)) (:foreground "#b58900" :weight bold :height unspecified))))
 '(swoop-face-line-buffer-name ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :weight bold :height unspecified))))
 '(swoop-face-line-number ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(swoop-face-target-line ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground unspecified))))
 '(swoop-face-target-words ((((class color) (min-colors 89)) (:background unspecified :foreground "#d33682"))))
 '(table-cell ((((class color) (min-colors 89)) (:foreground "#657b83" :background "#eee8d5"))))
 '(term ((t (:background "#fdf6e3" :foreground "#657b83"))))
 '(term-color-black ((t (:foreground "#eee8d5" :background "#eee8d5"))))
 '(term-color-red ((t (:foreground "#dc322f" :background "#dc322f"))))
 '(term-color-green ((t (:foreground "#859900" :background "#859900"))))
 '(term-color-yellow ((t (:foreground "#b58900" :background "#b58900"))))
 '(term-color-blue ((t (:foreground "#268bd2" :background "#268bd2"))))
 '(term-color-magenta ((t (:foreground "#d33682" :background "#d33682"))))
 '(term-color-cyan ((t (:foreground "#2aa198" :background "#2aa198"))))
 '(term-color-white ((t (:foreground "#073642" :background "#073642"))))
 '(tooltip ((((class color) (min-colors 89)) (:background "#DEB542" :foreground "#7B6000" :inherit variable-pitch))))
 '(tuareg-font-lock-governing-face ((((class color) (min-colors 89)) (:foreground "#d33682" :weight bold))))
 '(tuareg-font-lock-multistage-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :background "#eee8d5" :weight bold))))
 '(tuareg-font-lock-operator-face ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(tuareg-font-lock-error-face ((((class color) (min-colors 89)) (:foreground "#b58900" :background "#dc322f" :weight bold))))
 '(tuareg-font-lock-interactive-output-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(tuareg-font-lock-interactive-error-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#fdf6e3"))))
 '(undo-tree-visualizer-unmodified-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :inverse-video t))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 89)) (:foreground "#586e75" :background "#fdf6e3" :weight bold))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(vhl/default-face ((((class color) (min-colors 89)) (:background "#B4C342" :foreground "#546E00"))))
 '(w3m-anchor ((((class color) (min-colors 89)) (:inherit link))))
 '(w3m-arrived-anchor ((((class color) (min-colors 89)) (:inherit link-visited))))
 '(w3m-form ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83"))))
 '(w3m-header-line-location-title ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900"))))
 '(w3m-header-line-location-content ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(w3m-bold ((((class color) (min-colors 89)) (:foreground "#586e75" :weight bold))))
 '(w3m-image-anchor ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#2aa198" :inherit link))))
 '(w3m-image ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#2aa198"))))
 '(w3m-lnum-minibuffer-prompt ((((class color) (min-colors 89)) (:foreground "#586e75"))))
 '(w3m-lnum-match ((((class color) (min-colors 89)) (:background "#eee8d5"))))
 '(w3m-lnum ((((class color) (min-colors 89)) (:underline nil :bold nil :foreground "#dc322f"))))
 '(w3m-session-select ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(w3m-session-selected ((((class color) (min-colors 89)) (:foreground "#586e75" :bold t :underline t))))
 '(w3m-tab-background ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83"))))
 '(w3m-tab-selected-background ((((class color) (min-colors 89)) (:background "#fdf6e3" :foreground "#657b83"))))
 '(w3m-tab-mouse ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#b58900"))))
 '(w3m-tab-selected ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#586e75" :bold t))))
 '(w3m-tab-unselected ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#657b83"))))
 '(w3m-tab-selected-retrieving ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#dc322f"))))
 '(w3m-tab-unselected-retrieving ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#cb4b16"))))
 '(w3m-tab-unselected-unseen ((((class color) (min-colors 89)) (:background "#eee8d5" :foreground "#6c71c4"))))
 '(web-mode-builtin-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-comment-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(web-mode-constant-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :weight bold))))
 '(web-mode-current-element-highlight-face ((((class color) (min-colors 89)) (:underline unspecified :weight unspecified :background "#eee8d5"))))
 '(web-mode-css-at-rule-face ((((class color) (min-colors 89)) (:foreground "#6c71c4" :slant italic))))
 '(web-mode-css-pseudo-class-face ((((class color) (min-colors 89)) (:foreground "#859900" :slant italic))))
 '(web-mode-doctype-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :slant italic :weight bold))))
 '(web-mode-folded-face ((((class color) (min-colors 89)) (:underline t))))
 '(web-mode-function-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(web-mode-html-attr-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2" :slant normal))))
 '(web-mode-html-attr-value-face ((((class color) (min-colors 89)) (:foreground "#2aa198" :slant italic))))
 '(web-mode-html-tag-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(web-mode-keyword-face ((((class color) (min-colors 89)) (:foreground "#b58900" :weight normal))))
 '(web-mode-preprocessor-face ((((class color) (min-colors 89)) (:foreground "#b58900" :slant normal :weight unspecified))))
 '(web-mode-string-face ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(web-mode-type-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(web-mode-variable-name-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(web-mode-warning-face ((((class color) (min-colors 89)) (:inherit font-lock-warning-face))))
 '(web-mode-block-attr-name-face ((((class color) (min-colors 89)) (:inherit web-mode-html-attr-name-face))))
 '(web-mode-block-attr-value-face ((((class color) (min-colors 89)) (:inherit web-mode-html-attr-value-face))))
 '(web-mode-block-comment-face ((((class color) (min-colors 89)) (:inherit web-mode-comment-face))))
 '(web-mode-block-control-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(web-mode-block-face ((((class color) (min-colors 89)) (:background unspecified))))
 '(web-mode-block-string-face ((((class color) (min-colors 89)) (:inherit web-mode-string-face))))
 '(web-mode-comment-keyword-face ((((class color) (min-colors 89)) (:box 1 :weight bold))))
 '(web-mode-css-color-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-css-function-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-css-priority-face ((((class color) (min-colors 89)) (:inherit font-lock-builtin-face))))
 '(web-mode-css-property-name-face ((((class color) (min-colors 89)) (:inherit font-lock-variable-name-face))))
 '(web-mode-css-selector-face ((((class color) (min-colors 89)) (:inherit font-lock-keyword-face))))
 '(web-mode-css-string-face ((((class color) (min-colors 89)) (:inherit web-mode-string-face))))
 '(web-mode-javascript-string-face ((((class color) (min-colors 89)) (:inherit web-mode-string-face))))
 '(web-mode-json-context-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(web-mode-json-key-face ((((class color) (min-colors 89)) (:foreground "#6c71c4"))))
 '(web-mode-json-string-face ((((class color) (min-colors 89)) (:inherit web-mode-string-face))))
 '(web-mode-param-name-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(web-mode-part-comment-face ((((class color) (min-colors 89)) (:inherit web-mode-comment-face))))
 '(web-mode-part-face ((((class color) (min-colors 89)) (:inherit web-mode-block-face))))
 '(web-mode-part-string-face ((((class color) (min-colors 89)) (:inherit web-mode-string-face))))
 '(web-mode-symbol-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(web-mode-whitespace-face ((((class color) (min-colors 89)) (:background "#dc322f"))))
 '(web-mode-html-tag-bracket-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(web-mode-block-delimiter-face ((((class color) (min-colors 89)) (:inherit font-lock-preprocessor-face))))
 '(web-mode-css-comment-face ((((class color) (min-colors 89)) (:inherit web-mode-comment-face))))
 '(web-mode-css-variable-face ((((class color) (min-colors 89)) (:inherit web-mode-variable-name-face :slant italic))))
 '(web-mode-error-face ((((class color) (min-colors 89)) (:background "#dc322f"))))
 '(web-mode-function-call-face ((((class color) (min-colors 89)) (:inherit font-lock-function-name-face))))
 '(web-mode-html-attr-custom-face ((((class color) (min-colors 89)) (:inherit web-mode-html-attr-name-face))))
 '(web-mode-html-attr-engine-face ((((class color) (min-colors 89)) (:inherit web-mode-html-attr-custom-face))))
 '(web-mode-html-attr-equal-face ((((class color) (min-colors 89)) (:inherit web-mode-html-attr-name-face))))
 '(web-mode-html-tag-custom-face ((((class color) (min-colors 89)) (:inherit web-mode-html-tag-face))))
 '(web-mode-javascript-comment-face ((((class color) (min-colors 89)) (:inherit web-mode-comment-face))))
 '(web-mode-json-comment-face ((((class color) (min-colors 89)) (:inherit web-mode-comment-face))))
 '(weather-metno-date ((((class color) (min-colors 89)) (:foreground "#b58900" :height 1.2))))
 '(weather-metno-date-range ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(weather-metno-entry ((((class color) (min-colors 89)) (:foreground "#2aa198"))))
 '(weather-metno-footer ((((class color) (min-colors 89)) (:inherit font-lock-comment-face))))
 '(weather-metno-header ((((class color) (min-colors 89)) (:inherit header-line))))
 '(wgrep-delete-face ((((class color) (min-colors 89)) (:background unspecified :foreground "#268bd2"))))
 '(wgrep-done-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wgrep-face ((((class color) (min-colors 89)) (:background unspecified :foreground "#268bd2"))))
 '(wgrep-file-face ((((class color) (min-colors 89)) (:background unspecified :foreground "#d33682"))))
 '(wgrep-reject-face ((((class color) (min-colors 89)) (:foreground "#dc322f" :weight unspecified))))
 '(whitespace-space ((((class color) (min-colors 89)) (:background unspecified :foreground "#93a1a1" :inverse-video unspecified :slant italic))))
 '(whitespace-hspace ((((class color) (min-colors 89)) (:background unspecified :foreground "#586e75" :inverse-video unspecified))))
 '(whitespace-tab ((((class color) (min-colors 89)) (:background unspecified :foreground "#dc322f" :inverse-video unspecified :weight bold))))
 '(whitespace-newline ((((class color) (min-colors 89)) (:background unspecified :foreground "#93a1a1" :inverse-video unspecified))))
 '(whitespace-trailing ((((class color) (min-colors 89)) (:background unspecified :foreground "#F2804F" :inverse-video t))))
 '(whitespace-line ((((class color) (min-colors 89)) (:background unspecified :foreground "#d33682" :inverse-video unspecified))))
 '(whitespace-space-before-tab ((((class color) (min-colors 89)) (:background "#FF6E64" :foreground unspecified :inverse-video unspecified))))
 '(whitespace-indentation ((((class color) (min-colors 89)) (:background unspecified :foreground "#b58900" :inverse-video unspecified :weight bold))))
 '(whitespace-empty ((((class color) (min-colors 89)) (:background unspecified :foreground "#FF6E64" :inverse-video t))))
 '(whitespace-space-after-tab ((((class color) (min-colors 89)) (:background unspecified :foreground "#cb4b16" :inverse-video t :weight bold))))
 '(wl-highlight-folder-few-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(wl-highlight-folder-many-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(wl-highlight-folder-path-face ((((class color) (min-colors 89)) (:foreground "#cb4b16"))))
 '(wl-highlight-folder-unread-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-folder-zero-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(wl-highlight-folder-unknown-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-message-citation-header ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(wl-highlight-message-cited-text-1 ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(wl-highlight-message-cited-text-2 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-cited-text-3 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-message-cited-text-4 ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-message-header-contents-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-headers-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(wl-highlight-message-important-header-contents ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-header-contents ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-important-header-contents2 ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-signature ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(wl-highlight-message-unimportant-header-contents ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(wl-highlight-summary-answered-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-summary-disposed-face ((((class color) (min-colors 89)) (:foreground "#657b83" :slant italic))))
 '(wl-highlight-summary-new-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(wl-highlight-summary-normal-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(wl-highlight-summary-thread-top-face ((((class color) (min-colors 89)) (:foreground "#b58900"))))
 '(wl-highlight-thread-indent-face ((((class color) (min-colors 89)) (:foreground "#d33682"))))
 '(wl-highlight-summary-refiled-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(wl-highlight-summary-displaying-face ((((class color) (min-colors 89)) (:underline t :weight bold))))
 '(weechat-error-face ((((class color) (min-colors 89)) (:inherit error))))
 '(weechat-highlight-face ((((class color) (min-colors 89)) (:foreground "#657b83" :weight bold))))
 '(weechat-nick-self-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight unspecified))))
 '(weechat-prompt-face ((((class color) (min-colors 89)) (:inherit minibuffer-prompt))))
 '(weechat-time-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(which-func ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(window-number-face ((((class color) (min-colors 89)) (:foreground "#859900"))))
 '(yascroll:thumb-text-area ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#93a1a1"))))
 '(yascroll:thumb-fringe ((((class color) (min-colors 89)) (:foreground "#93a1a1" :background "#93a1a1"))))
 '(yas-field-highlight-face ((((class color) (min-colors 89)) (:inherit secondary-selection))))
 '(zencoding-preview-input ((((class color) (min-colors 89)) (:background "#eee8d5" :box "#586e75"))))
 '(ztreep-arrow-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(ztreep-diff-header-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight bold :height 1.2))))
 '(ztreep-diff-header-small-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight bold))))
 '(ztreep-diff-model-add-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(ztreep-diff-model-diff-face ((((class color) (min-colors 89)) (:foreground "#dc322f"))))
 '(ztreep-diff-model-normal-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(ztreep-expand-sign-face ((((class color) (min-colors 89)) (:foreground "#93a1a1"))))
 '(ztreep-header-face ((((class color) (min-colors 89)) (:foreground "#93a1a1" :weight bold :height 1.2))))
 '(ztreep-leaf-face ((((class color) (min-colors 89)) (:foreground "#657b83"))))
 '(ztreep-node-face ((((class color) (min-colors 89)) (:foreground "#268bd2"))))
 '(default ((((class color) (min-colors 89)) (:foreground "#657b83" :background "#fdf6e3")))))

(provide-theme 'solarized-light)
